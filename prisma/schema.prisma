// Prisma Schema for PostgreSQL Database
// 学习视频平台数据库模式

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

// 用户表
model User {
  id        String   @id @default(cuid())
  email     String   @unique
  name      String?
  password  String
  role      UserRole @default(STUDENT)
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  // 关系
  subscriptions   Subscription[]
  videoAccesses   VideoAccess[]
  watchHistories  WatchHistory[]

  @@map("users")
}

// 用户角色枚举
enum UserRole {
  STUDENT
  ADMIN
}

// 订阅计划表
model SubscriptionPlan {
  id          String      @id @default(cuid())
  name        String      @unique
  description String?
  price       Decimal     @db.Decimal(10,2)
  duration    Int         // 天数
  accessLevel AccessLevel @default(BASIC)
  createdAt   DateTime    @default(now())
  updatedAt   DateTime    @updatedAt

  // 关系
  subscriptions Subscription[]

  @@map("subscription_plans")
}

// 访问级别枚举
enum AccessLevel {
  BASIC
  PREMIUM
  VIP
}

// 用户订阅表
model Subscription {
  id        String           @id @default(cuid())
  userId    String
  planId    String
  status    SubscriptionStatus @default(ACTIVE)
  startDate DateTime         @default(now())
  endDate   DateTime
  createdAt DateTime         @default(now())
  updatedAt DateTime         @updatedAt

  // 关系
  user User             @relation(fields: [userId], references: [id], onDelete: Cascade)
  plan SubscriptionPlan @relation(fields: [planId], references: [id], onDelete: Cascade)

  @@map("subscriptions")
}

// 订阅状态枚举
enum SubscriptionStatus {
  ACTIVE
  EXPIRED
  CANCELLED
}

// 视频分类表
model VideoCategory {
  id          String   @id @default(cuid())
  name        String   @unique
  description String?
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt

  // 关系
  videos Video[]

  @@map("video_categories")
}

// 视频表
model Video {
  id          String      @id @default(cuid())
  title       String
  description String?
  url         String
  thumbnail   String?
  duration    Int?        // 秒数
  categoryId  String
  accessLevel AccessLevel @default(BASIC)
  status      VideoStatus @default(ACTIVE)
  createdAt   DateTime    @default(now())
  updatedAt   DateTime    @updatedAt

  // 关系
  category       VideoCategory @relation(fields: [categoryId], references: [id], onDelete: Cascade)
  videoAccesses  VideoAccess[]
  watchHistories WatchHistory[]

  @@map("videos")
}

// 视频状态枚举
enum VideoStatus {
  ACTIVE
  INACTIVE
  PROCESSING
  DELETED
}

// 视频访问权限表
model VideoAccess {
  id         String     @id @default(cuid())
  userId     String
  videoId    String
  accessType AccessType @default(DIRECT_GRANT)
  grantedAt  DateTime   @default(now())
  expiresAt  DateTime?

  // 关系
  user  User  @relation(fields: [userId], references: [id], onDelete: Cascade)
  video Video @relation(fields: [videoId], references: [id], onDelete: Cascade)

  @@unique([userId, videoId])
  @@map("video_accesses")
}

// 访问类型枚举
enum AccessType {
  SUBSCRIPTION
  DIRECT_GRANT
  TEMPORARY
}

// 观看历史表
model WatchHistory {
  id        String   @id @default(cuid())
  userId    String
  videoId   String
  progress  Float    @default(0) // 观看进度百分比 (0-100)
  watchedAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  // 关系
  user  User  @relation(fields: [userId], references: [id], onDelete: Cascade)
  video Video @relation(fields: [videoId], references: [id], onDelete: Cascade)

  @@unique([userId, videoId])
  @@map("watch_histories")
}

// 系统配置表
model SystemConfig {
  id        String   @id @default(cuid())
  key       String   @unique
  value     String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  @@map("system_configs")
}
